name: practise code
on: 
  push:
    branches:
       - main
       - dev
jobs: 
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16,18, 20]
    steps:
       - name: get code
         uses: actions/checkout@v3
       - name: check cache
         id: cache
         uses: actions/cache@v3
         with:
           path: ~/.npm
           key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
       - name: install dependencies
         if: steps.cache.outputs.cache-hit != 'true'
         uses: actions/setup-node@v3
         with:
           node-version: ${{ matrix.node-version }}
       - name: build
         run: npm run start
  Test:
    runs-on: ubuntu-latest
    needs: build
    steps:
       - name: get code
         uses: actions/checkout@v3
       - name: check cache
         id: cache
         uses: actions/cache@v3
         with:
           path: ~/.npm
           key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
       - name: install dependencies
         if: steps.cache.outputs.cache-hit != 'true'
         uses: actions/setup-node@v3
         with:
           node-version: '18'
       - name: build
         id: test_code
         run: npm run start
       - name: upload code
         if: failure() && steps.test_code.outcome == 'failure'
         uses: actions/upload-artifact@v3
         with:
           name: test-failure-logs
           path: ./logs/test.log
  report:
    runs-on: ubuntu-latest
    needs: [build, Test]
    if: failure()
    steps:
       - name: get code
         run: echo "Getting code..."  
